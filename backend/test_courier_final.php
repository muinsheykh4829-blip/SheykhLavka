<?php
// –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API –∫—É—Ä—å–µ—Ä–∞

echo "üöö === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ === üöö\n\n";

function cleanResponse($response) {
    return ltrim($response, '-');
}

function makeRequest($url, $method = 'GET', $data = null, $token = null) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $headers = ['Accept: application/json'];
    
    if ($token) {
        $headers[] = 'Authorization: Bearer ' . $token;
    }
    
    if ($data) {
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        $headers[] = 'Content-Type: application/json';
    } elseif ($method === 'POST') {
        curl_setopt($ch, CURLOPT_POST, 1);
    }
    
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    return [
        'code' => $httpCode,
        'body' => cleanResponse($response),
        'data' => json_decode(cleanResponse($response), true)
    ];
}

// 1. –¢–µ—Å—Ç –ª–æ–≥–∏–Ω–∞
echo "1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫—É—Ä—å–µ—Ä–∞...\n";
$loginResponse = makeRequest(
    'http://localhost:8000/api/courier/login',
    'POST',
    ['login' => 'courier1', 'password' => '123123']
);

if ($loginResponse['code'] === 200 && $loginResponse['data']['success']) {
    $token = $loginResponse['data']['data']['token'];
    $courierName = $loginResponse['data']['data']['courier']['name'];
    echo "‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω! –ö—É—Ä—å–µ—Ä: $courierName\n";
    echo "üîë –¢–æ–∫–µ–Ω: " . substr($token, 0, 25) . "...\n\n";
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: " . $loginResponse['body'] . "\n";
    exit(1);
}

// 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
echo "2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤...\n";
$ordersResponse = makeRequest('http://localhost:8000/api/courier/orders', 'GET', null, $token);

if ($ordersResponse['code'] === 200 && $ordersResponse['data']['success']) {
    $orders = $ordersResponse['data']['orders'];
    echo "‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: " . count($orders) . "\n";
    
    if (count($orders) > 0) {
        $testOrder = $orders[0];
        echo "üì¶ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑: #{$testOrder['order_number']} –Ω–∞ —Å—É–º–º—É {$testOrder['total']} —Å–æ–º\n\n";
    } else {
        echo "‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n";
        exit(0);
    }
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤: " . $ordersResponse['body'] . "\n";
    exit(1);
}

// 3. –¢–µ—Å—Ç –≤–∑—è—Ç–∏—è –∑–∞–∫–∞–∑–∞
echo "3Ô∏è‚É£ –ë–µ—Ä–µ–º –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç—É...\n";
$takeResponse = makeRequest(
    "http://localhost:8000/api/courier/orders/{$testOrder['id']}/take",
    'POST',
    null,
    $token
);

if ($takeResponse['code'] === 200 && $takeResponse['data']['success']) {
    echo "‚úÖ –ó–∞–∫–∞–∑ #{$testOrder['order_number']} —É—Å–ø–µ—à–Ω–æ –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É!\n\n";
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –≤–∑—è—Ç–∏—è –∑–∞–∫–∞–∑–∞: " . $takeResponse['body'] . "\n";
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –∑–∞–∫–∞–∑ —É–∂–µ –≤–∑—è—Ç
}

// 4. –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
echo "4Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–æ—Å—Ç–∞–≤–∫—É...\n";
$completeResponse = makeRequest(
    "http://localhost:8000/api/courier/orders/{$testOrder['id']}/complete",
    'POST',
    null,
    $token
);

if ($completeResponse['code'] === 200 && $completeResponse['data']['success']) {
    echo "‚úÖ –ó–∞–∫–∞–∑ #{$testOrder['order_number']} —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω!\n\n";
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: " . $completeResponse['body'] . "\n";
}

// 5. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo "üìä === –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===\n";
echo "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –†–ê–ë–û–¢–ê–ï–¢\n";
echo "‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: –†–ê–ë–û–¢–ê–ï–¢\n";
echo "‚úÖ –í–∑—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞: –†–ê–ë–û–¢–ê–ï–¢\n";
echo "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏: –†–ê–ë–û–¢–ê–ï–¢\n\n";

echo "üéâ –í–°–ï API –ú–ï–¢–û–î–´ –ö–£–†–¨–ï–†–ê –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!\n";
echo "üì± Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.\n\n";

echo "üîß –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n";
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: flutter run\n";
echo "2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∫—É—Ä—å–µ—Ä: courier1 / 123123\n";
echo "3. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã\n";
echo "4. –í–æ–∑—å–º–∏—Ç–µ –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç—É\n";
echo "5. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É\n\n";

echo "üèÉ‚Äç‚ôÇÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!\n";
