<?php
// –¢–µ—Å—Ç –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤

echo "=== –¢–ï–°–¢ –í–ò–î–ò–ú–û–°–¢–ò –ó–ê–ö–ê–ó–û–í ===\n\n";

function cleanResponse($response) {
    return ltrim($response, '-');
}

function makeRequest($url, $method = 'GET', $data = null, $token = null) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    
    $headers = ['Accept: application/json'];
    if ($token) {
        $headers[] = 'Authorization: Bearer ' . $token;
    }
    if ($data) {
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        $headers[] = 'Content-Type: application/json';
    } elseif ($method === 'POST') {
        curl_setopt($ch, CURLOPT_POST, 1);
    }
    
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    return [
        'code' => $httpCode,
        'body' => cleanResponse($response),
        'data' => json_decode(cleanResponse($response), true)
    ];
}

// –õ–æ–≥–∏–Ω –∫—É—Ä—å–µ—Ä–æ–≤
echo "1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä–æ–≤...\n";
$courier1 = makeRequest('http://localhost:8000/api/courier/login', 'POST', ['login' => 'courier1', 'password' => '123123']);
$courier2 = makeRequest('http://localhost:8000/api/courier/login', 'POST', ['login' => 'courier2', 'password' => 'password']);

if ($courier1['code'] !== 200 || $courier2['code'] !== 200) {
    echo "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\n";
    echo "–ö—É—Ä—å–µ—Ä 1: " . $courier1['body'] . "\n";
    echo "–ö—É—Ä—å–µ—Ä 2: " . $courier2['body'] . "\n";
    exit;
}

$token1 = $courier1['data']['data']['token'];
$token2 = $courier2['data']['data']['token'];

echo "‚úÖ –ö—É—Ä—å–µ—Ä 1 (–ò–≤–∞–Ω): " . substr($token1, 0, 20) . "...\n";
echo "‚úÖ –ö—É—Ä—å–µ—Ä 2 (–ü–µ—Ç—Ä): " . substr($token2, 0, 20) . "...\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∏–ø—ã –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±–æ–∏—Ö –∫—É—Ä—å–µ—Ä–æ–≤
$statuses = ['ready', 'delivering', 'history'];

foreach ($statuses as $status) {
    echo "2Ô∏è‚É£ –ó–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '$status':\n";
    
    $orders1 = makeRequest("http://localhost:8000/api/courier/orders?status=$status", 'GET', null, $token1);
    $orders2 = makeRequest("http://localhost:8000/api/courier/orders?status=$status", 'GET', null, $token2);
    
    echo "  –ö—É—Ä—å–µ—Ä 1 (–ò–≤–∞–Ω) –≤–∏–¥–∏—Ç: ";
    if ($orders1['code'] === 200) {
        $count1 = count($orders1['data']['orders']);
        echo "$count1 –∑–∞–∫–∞–∑–æ–≤\n";
        if ($count1 > 0) {
            foreach ($orders1['data']['orders'] as $order) {
                echo "    - #{$order['order_number']} (ID: {$order['id']}, —Å—Ç–∞—Ç—É—Å: {$order['status']})\n";
            }
        }
    } else {
        echo "–û—à–∏–±–∫–∞: " . $orders1['body'] . "\n";
    }
    
    echo "  –ö—É—Ä—å–µ—Ä 2 (–ü–µ—Ç—Ä) –≤–∏–¥–∏—Ç: ";
    if ($orders2['code'] === 200) {
        $count2 = count($orders2['data']['orders']);
        echo "$count2 –∑–∞–∫–∞–∑–æ–≤\n";
        if ($count2 > 0) {
            foreach ($orders2['data']['orders'] as $order) {
                echo "    - #{$order['order_number']} (ID: {$order['id']}, —Å—Ç–∞—Ç—É—Å: {$order['status']})\n";
            }
        }
    } else {
        echo "–û—à–∏–±–∫–∞: " . $orders2['body'] . "\n";
    }
    
    echo "\n";
}

echo "üîç –ê–ù–ê–õ–ò–ó:\n";
echo "- –ì–æ—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –¥–ª—è –æ–±–æ–∏—Ö –∫—É—Ä—å–µ—Ä–æ–≤\n";
echo "- –ó–∞–∫–∞–∑—ã –≤ –¥–æ—Å—Ç–∞–≤–∫–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º–∏ (—Ç–æ–ª—å–∫–æ —Å–≤–æ–∏)\n";
echo "- –ò—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞\n";
